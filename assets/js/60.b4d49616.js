(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{421:function(e,t,s){"use strict";s.r(t);var i=s(42),v=Object(i.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[e._v("#")]),e._v(" HTTP")]),e._v(" "),s("ul",[s("li",[e._v("http - 80 TCP port")]),e._v(" "),s("li",[e._v("https - 443 TCP port")]),e._v(" "),s("li",[e._v("Stateless protocol")]),e._v(" "),s("li",[e._v('Chunked transfers : If content to be sent by server is dynamic "content-length" cannot be\nidentified. So send chunks of content. Last chunk is always empty with "content-length=0". This\nhelps to close the connection between server & client.')]),e._v(" "),s("li",[e._v("http/1.1\n"),s("ul",[s("li",[e._v("Only 1 connection at 1 time")])])]),e._v(" "),s("li",[e._v("Google Spdy 2009\n"),s("ul",[s("li",[e._v("Aim - to reduce Latency")]),e._v(" "),s("li",[e._v("Merged with Http/2 in 2015")])])])]),e._v(" "),s("p",[s("strong",[e._v("HTTP/2 -. http2.github.io")])]),e._v(" "),s("ol",[s("li",[s("p",[e._v("Binary protocol")]),e._v(" "),s("ul",[s("li",[e._v("Binary data ( v1.1 uses readable text)")]),e._v(" "),s("li",[e._v("Building blocks - Frames & Streams")]),e._v(" "),s("li",[e._v("Stream = collection of frames")]),e._v(" "),s("li",[e._v("HTTP message - 1 â€¦.n frames\n"),s("ul",[s("li",[e._v("HEADERS - metadata")]),e._v(" "),s("li",[e._v("DATA - payload")]),e._v(" "),s("li",[e._v("RST_STREAM")]),e._v(" "),s("li",[e._v("SETTINGS, PRIORITY, etc")])])])])]),e._v(" "),s("li",[s("p",[e._v("Multiplexing")])])]),e._v(" "),s("ul",[s("li",[e._v("Only 1 tcp connection is open")]),e._v(" "),s("li",[e._v("N streams can be sent asynchronously")]),e._v(" "),s("li",[e._v("Both client & server streams are asynchronous")])]),e._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[e._v("HPACK header compression")])]),e._v(" "),s("ul",[s("li",[e._v("Same as http/1.1 + pseudo headers (method, scheme, host, path)")]),e._v(" "),s("li",[e._v("Request/response - uses gzip")]),e._v(" "),s("li",[e._v("Headers - uses Hoffman's shared table")]),e._v(" "),s("li",[e._v("Both client/server has same Header's table")]),e._v(" "),s("li",[e._v("Hoffman code is index for header's tables")])]),e._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[e._v("Server push")])]),e._v(" "),s("ul",[s("li",[e._v("Server predicts client's future request")])]),e._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[e._v("Request prioritization")])]),e._v(" "),s("ul",[s("li",[e._v("Add prioritization details to stream in\n"),s("ul",[s("li",[e._v("HEADERS frame (opening time)")]),e._v(" "),s("li",[e._v("PRIORITY frame (open stream)")])])]),e._v(" "),s("li",[e._v("Without this details server will process streams in async way")]),e._v(" "),s("li",[e._v("More priority = more server resources")])]),e._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[e._v("Security")])]),e._v(" "),s("ul",[s("li",[e._v("Encryption = TLS over http/2 = https")]),e._v(" "),s("li",[e._v("TLS is option al")])]),e._v(" "),s("p",[s("strong",[e._v("HTTP/3")]),e._v(" - In draft version. Coming soon.")]),e._v(" "),s("ul",[s("li",[e._v("Previously known as HTTP-over-QUIC")]),e._v(" "),s("li",[e._v("QUIC - Quick UDP internet connections")])]),e._v(" "),s("h2",{attrs:{id:"dns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[e._v("#")]),e._v(" DNS")]),e._v(" "),s("hr"),e._v(" "),s("ol",[s("li",[s("p",[e._v("Local cache")]),e._v(" "),s("ul",[s("li",[e._v("Browser cache")]),e._v(" "),s("li",[e._v("DNS cache")]),e._v(" "),s("li",[e._v("Host file")])])]),e._v(" "),s("li",[s("p",[e._v("Recursive DNS servers")])]),e._v(" "),s("li",[s("p",[e._v("Root DNS servers")])]),e._v(" "),s("li",[s("p",[e._v("Top level domain TLD")])]),e._v(" "),s("li",[s("p",[e._v("Authoritative DNS servers (A record)")])])])])}),[],!1,null,null,null);t.default=v.exports}}]);