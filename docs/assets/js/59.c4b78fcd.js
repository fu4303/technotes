(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{420:function(t,e,a){"use strict";a.r(e);var s=a(42),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),a("blockquote",[a("p",[t._v("Version Control System For Any Projects")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://git-scm.com/doc",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-scm.com"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://training.github.com/downloads/github-git-cheat-sheet.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-git-cheat-sheet.pdf"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://gist.github.com/hofmannsven/6814451",target:"_blank",rel:"noopener noreferrer"}},[t._v("hofmannsven/6814451"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tiimgreen/github-cheat-sheet",target:"_blank",rel:"noopener noreferrer"}},[t._v("tiimgreen/github-cheat-sheet"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" project\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])])]),a("h2",{attrs:{id:"ssh-https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssh-https"}},[t._v("#")]),t._v(" SSH / HTTPS")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SSH")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin ssh://git@github.com:umeshmk/Tutorials.git\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HTTPS")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin https://github.com/umeshmk/Tutorials.git\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HTTPS + Username")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin https://umeshmk@github.com/umeshmk/Tutorials.git\n")])])]),a("h2",{attrs:{id:"tracking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tracking"}},[t._v("#")]),t._v(" TRACKING")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Tracking")]),t._v(" "),a("th"),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("em",[t._v("Status")])]),t._v(" "),a("td",[t._v("View git status")]),t._v(" "),a("td",[a("code",[t._v("git status")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("Untracked")])]),t._v(" "),a("td",[t._v("New file created")]),t._v(" "),a("td",[a("code",[t._v("touch abc.txt")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("Staged")])]),t._v(" "),a("td",[t._v("File ready for commit (except "),a("code",[t._v(".gitignore")]),t._v(")")]),t._v(" "),a("td",[a("code",[t._v("git add abc.txt")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("Committed")])]),t._v(" "),a("td",[t._v("Repo updated")]),t._v(" "),a("td",[a("code",[t._v('git commit -m "updated"')])])])])]),t._v(" "),a("h2",{attrs:{id:"basics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basics"}},[t._v("#")]),t._v(" BASICS")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Cmd")]),t._v(" "),a("th",[t._v("-")]),t._v(" "),a("th",[t._v("-")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("em",[t._v("Push")])]),t._v(" "),a("td",[t._v("Sends repo to remote server")]),t._v(" "),a("td",[a("code",[t._v("git push -u origin master")]),t._v("   [ "),a("code",[t._v("-u")]),t._v(" to remembers repo and branch names ]   "),a("code",[t._v("git push")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("Clone")])]),t._v(" "),a("td",[t._v("Creates local copy of remote repo")]),t._v(" "),a("td",[a("code",[t._v("git clone <url>")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("Remote add")])]),t._v(" "),a("td",[t._v("Associates local repo with remote repo")]),t._v(" "),a("td",[a("code",[t._v("git remote add origin <url>")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("Pull")])]),t._v(" "),a("td",[t._v("Updates local repo if remote is updated")]),t._v(" "),a("td",[a("code",[t._v("git pull origin master")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("Diff")])]),t._v(" "),a("td",[t._v("Difference between commits")]),t._v(" "),a("td",[a("code",[t._v("git diff HEAD")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("Reset")])]),t._v(" "),a("td",[t._v("Removes file from "),a("em",[t._v("staged")]),t._v(" (file is unchanged)")]),t._v(" "),a("td",[a("code",[t._v("git reset abc.txt")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("Checkout")])]),t._v(" "),a("td",[t._v("Resets file to last commit (file is changed)")]),t._v(" "),a("td",[a("code",[t._v("git checkout abc.text")])])])])]),t._v(" "),a("h2",{attrs:{id:"branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#branch"}},[t._v("#")]),t._v(" BRANCH")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Task")]),t._v(" "),a("th",[t._v("-")]),t._v(" "),a("th",[t._v("-")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("em",[t._v("Create")])]),t._v(" "),a("td",[t._v("Creates new branch")]),t._v(" "),a("td",[a("code",[t._v("git branch <branchname>")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("Switch branch")])]),t._v(" "),a("td",[t._v("Switch to new branch")]),t._v(" "),a("td",[a("code",[t._v("git checkout <branchname>")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("See branch")])]),t._v(" "),a("td",[t._v("Lists all branches")]),t._v(" "),a("td",[a("code",[t._v("git branch")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("Merge")])]),t._v(" "),a("td",[t._v("Merge any branch with master branch")]),t._v(" "),a("td",[t._v("First switch to master "),a("code",[t._v("git checkout master")]),t._v(" then "),a("code",[t._v("git merge <anybranch>")])])])])]),t._v(" "),a("h2",{attrs:{id:"amend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amend"}},[t._v("#")]),t._v(" AMEND")]),t._v(" "),a("ul",[a("li",[t._v("Combine "),a("em",[t._v("staged")]),t._v(" changes to "),a("em",[t._v("previous")]),t._v(" commit")]),t._v(" "),a("li",[t._v("Replaces the whole previous commit")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"updated"')]),t._v("\n")])])]),a("h2",{attrs:{id:"tag-releases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tag-releases"}},[t._v("#")]),t._v(" TAG (Releases)")]),t._v(" "),a("ul",[a("li",[t._v("Use tags like "),a("code",[t._v("v1, v2, v2.0.2")])]),t._v(" "),a("li",[t._v("Saves current state as a new release.")]),t._v(" "),a("li",[a("strong",[t._v("Create")])])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag                                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# list tags")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lightweight")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Any message"')]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Annotated")]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[t._v("Push")])])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# By default tags are excluded when repo is pushed. So use this cmds.")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --tags                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# all tags pushed")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# only 1 tag is pushed")]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[t._v("Github GUI")]),t._v(" "),a("ul",[a("li",[t._v("Create tags using github GUI.")]),t._v(" "),a("li",[t._v("Now fetch this changes using cmd "),a("code",[t._v("git fetch")])])])])]),t._v(" "),a("h2",{attrs:{id:"misc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#misc"}},[t._v("#")]),t._v(" MISC")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Task")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("em",[t._v("Fetch")])]),t._v(" "),a("td",[a("code",[t._v("git fetch")])])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("History")])]),t._v(" "),a("td",[a("code",[t._v("git log")])])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);