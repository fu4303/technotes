(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{467:function(a,r,s){"use strict";s.r(r);var t=s(42),n=Object(t.a)({},(function(){var a=this,r=a.$createElement,s=a._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"zsh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zsh"}},[a._v("#")]),a._v(" Zsh")]),a._v(" "),s("blockquote",[s("p",[a._v("A very powerful shell when combined with framework like OhMyZsh")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://www.zsh.org",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.zsh.org"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("Shell - "),s("code",[a._v("zsh")])]),a._v(" "),s("p",[a._v("Config - "),s("code",[a._v("~/.zshrc")])]),a._v(" "),s("p",[a._v("Community framework - "),s("code",[a._v("ohmyzsh")])])]),a._v(" "),s("h2",{attrs:{id:"guides"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#guides"}},[a._v("#")]),a._v(" Guides")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://www.bash2zsh.com/zsh_refcard/refcard.pdf",target:"_blank",rel:"noopener noreferrer"}},[a._v("Reference card"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://grml.org/zsh/zsh-lovers.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://grml.org/zsh/zsh-lovers.html"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/mathiasbynens/dotfiles",target:"_blank",rel:"noopener noreferrer"}},[a._v("DotFiles"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH",target:"_blank",rel:"noopener noreferrer"}},[a._v("Install zsh "),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("Install zsh on GitBash\n"),s("ul",[s("li",[a._v("Extract "),s("a",{attrs:{href:"https://packages.msys2.org/package/zsh?repo=msys&variant=x86_64",target:"_blank",rel:"noopener noreferrer"}},[a._v("zsh package"),s("OutboundLink")],1),a._v(") to "),s("code",[a._v("C:\\Program Files\\Git")])]),a._v(" "),s("li",[s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Launch Zsh (Add this in .bashrc)")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" -t "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zsh")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n")])])])])])]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/ohmyzsh/ohmyzsh",target:"_blank",rel:"noopener noreferrer"}},[a._v("Install ohmyzsh "),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/ohmyzsh/ohmyzsh/blob/master/lib/key-bindings.zsh",target:"_blank",rel:"noopener noreferrer"}},[a._v("Keybindings "),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("Plugins\n"),s("ul",[s("li",[a._v("Add this\n"),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/zsh-users/zsh-autosuggestions",target:"_blank",rel:"noopener noreferrer"}},[a._v("zsh-autosuggest"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/INSTALL.md",target:"_blank",rel:"noopener noreferrer"}},[a._v("zsh-syntax-highlighting"),s("OutboundLink")],1)])])]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/unixorn/awesome-zsh-plugins",target:"_blank",rel:"noopener noreferrer"}},[a._v("unixorn/awesome-zsh-plugins"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins",target:"_blank",rel:"noopener noreferrer"}},[a._v("ohmyzsh"),s("OutboundLink")],1)])])])]),a._v(" "),s("h2",{attrs:{id:"themes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#themes"}},[a._v("#")]),a._v(" Themes")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("Prompt")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/ohmyzsh/ohmyzsh/wiki/Themes",target:"_blank",rel:"noopener noreferrer"}},[a._v("OhMyZsh Themes"),s("OutboundLink")],1),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://ibb.co/J7Bqw2C",target:"_blank",rel:"noopener noreferrer"}},[a._v("My Good ones "),s("OutboundLink")],1)]),a._v(" "),s("li",[s("code",[a._v("robbyrussell, agnoster, af-magic, apple, arrow, bureau, refined, terminalparty")])])])]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/romkatv/powerlevel10k",target:"_blank",rel:"noopener noreferrer"}},[a._v("Powerlevel10k theme"),s("OutboundLink")],1),a._v(" "),s("ul",[s("li",[s("code",[a._v("powerlevel10k/powerlevel10k")])]),a._v(" "),s("li",[a._v("It includes oh-my-zsh themes too.")]),a._v(" "),s("li",[s("code",[a._v("p10k configure")]),a._v(" - Cmd for Config style")]),a._v(" "),s("li",[a._v("Font - "),s("code",[a._v("MesloLGS NF")]),a._v(" (font with icons from NerdFonts)")])])])])]),a._v(" "),s("li",[s("strong",[a._v("Terminal")]),a._v(" "),s("ul",[s("li",[a._v("Macos - "),s("a",{attrs:{href:"https://github.com/lysyi3m/macos-terminal-themes",target:"_blank",rel:"noopener noreferrer"}},[a._v("Macos-terminal-themes"),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("Windows - "),s("a",{attrs:{href:"https://terminalsplash.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Terminalsplash"),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("Linux - "),s("a",{attrs:{href:"https://mayccoll.github.io/Gogh/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Gogh"),s("OutboundLink")],1)])])])]),a._v(" "),s("h2",{attrs:{id:"zsh-startup-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zsh-startup-files"}},[a._v("#")]),a._v(" zsh startup files")]),a._v(" "),s("ul",[s("li",[s("code",[a._v(".zshenv")])]),a._v(" "),s("li",[s("code",[a._v(".zprofile")])]),a._v(" "),s("li",[s("code",[a._v(".zshrc")])]),a._v(" "),s("li",[s("code",[a._v(".zlogin")])])]),a._v(" "),s("h2",{attrs:{id:"zshrc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zshrc"}},[a._v("#")]),a._v(" .zshrc")]),a._v(" "),s("div",{staticClass:"language-zshrc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('\n# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.\n# Initialization code that may require console input (password prompts, [y/n]\n# confirmations, etc.) must go above this block; everything else may go below.\nif [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then\n  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"\nfi\n\n\n# wsl ubuntu - $HOME is /home/umesh\n# Git Bash   - $HOME is /c/Users/umesh\nexport PATH=$HOME/bin:/usr/local/bin:$PATH\n# export ZSH="/home/umesh/.oh-my-zsh"\nexport ZSH="$HOME/.oh-my-zsh"\n\n# robbyrussell, agnoster, af-magic, apple, arrow, bureau, refined, terminalparty\nZSH_THEME="powerlevel10k/powerlevel10k"\n\n# Completion.\n# CASE_SENSITIVE="true"\n# HYPHEN_INSENSITIVE="true"  # Case-sensitive completion must be off. _ and - will be interchangeable.\n\n# History timestamps\n# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd" or set using strftime\nHIST_STAMPS="dd.mm.yyyy"\n\n# Add wisely, as too many plugins slow down shell startup.\n# Note - zsh-syntax-highlighting - always last\nplugins=(\n    z\n    sudo\n    zsh-autosuggestions\n    zsh-syntax-highlighting\n)\n\nsource $ZSH/oh-my-zsh.sh\nsource ~/.aliases\n\n# User configuration\n# export MANPATH="/usr/local/man:$MANPATH"\n# export LANG=en_US.UTF-8\n\n\n# ---Key Bindings---\nbindkey \'^H\' backward-kill-word\n\n\n# Powerlevel10K\n# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.\n[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh\n\n\n\n# function acp() {\n#   git add .\n#   git commit -m "$1"\n#   git push\n```\n')])])]),s("h2",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases"}},[a._v("#")]),a._v(" .aliases")]),a._v(" "),s("div",{staticClass:"language-aliases extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#-------------------\r\n# ---My Alias---\r\n#-------------------\r\n# alias [flag] [custom-alias]=\"[command]\"\r\n\r\nalias ..=\"cd ..\"\r\nalias ...=\"cd ../..\"\r\nalias ....=\"cd ../../..\"\r\nalias .....=\"cd ../../../..\"\r\nalias ~=\"cd ~\" \r\n\r\n# Basics\r\nalias install='sudo apt install'\r\nalias update='sudo apt update'\r\nalias remove=\"sudo apt-get remove --purge\"\r\nalias src=\"source ~/.zshrc || source ~/.bashrc \"\r\nalias l='ls -lah'\r\nalias ls='ls --color=tty'\r\nalias lsa='ls -a'\r\nalias c=\"code\"\r\nalias cl=\"clear\"\r\nalias d=\"dirs\"\r\nalias history=\"omz_history \"        # zsh\r\nalias zshrc='vim ~/.zshrc'          # zsh\r\nalias bashrc='vim ~/.bashrc'\r\nalias md='mkdir -p'\r\nalias rd=rmdir\r\nalias _='sudo '\r\n# alias z='_z 2>&1'     #zsh\r\n\r\n\r\n# ---default app for extensions---\r\n# alias -s [file-extension]=[name-of-app]\r\n# alias -s html=\"code\"\r\n\r\n# ----Global---\r\n# alias -g [custom-alias]=\"[Command]\"\r\nalias G=\"| grep\"\r\nalias L=\"| less\"\r\n# alias -g GG=\"google.com\"\r\n\r\n# ---Git---\r\nalias g=\"git\"\r\nalias g=git\r\nalias ga='git add'\r\nalias gaa='git add --all'\r\nalias gb='git branch'\r\nalias gc='git commit'\r\nalias gcmsg='git commit -m'\r\nalias gco='git checkout'\r\nalias gcb='git checkout -b'\r\nalias gcm='git checkout $(git_main_branch)'\r\nalias gcf='git config --list'\r\nalias gcl='git clone '\r\nalias gd='git diff'\r\nalias gf='git fetch'\r\nalias gl='git pull'\r\nalias ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'\r\nalias ghp='git help'\r\nalias glg='git log --stat'\r\nalias glum='git pull upstream $(git_main_branch)'\r\nalias gm='git merge'\r\nalias gma='git merge --abort'\r\nalias gmt='git mergetool'\r\nalias gp='git push'\r\nalias gr='git remote'\r\nalias grb='git rebase'\r\nalias gst='git status'\r\nalias gs='git stash'\r\nalias gsw='git switch'\r\nalias gt='git tag'\r\nalias gtv='git tag | sort -V'\r\n\r\n# ---npm---\r\nalias ni=\"npm install\";\r\nalias nrs=\"npm run start -s --\";\r\nalias nrb=\"npm run build -s --\";\r\nalias nrd=\"npm run dev -s --\";\r\nalias nrt=\"npm run test -s --\";\r\nalias nrtw=\"npm run test:watch -s --\";\r\nalias nrv=\"npm run validate -s --\";\r\nalias rmn=\"rm -rf node_modules\";\r\nalias nflush=\"rm -rf node_modules && npm i\";\r\nalias nreset=\"rm -rf node_modules && rm package-lock.json && npm i\";\r\n\r\n# ---Yarn---\r\nalias yar=\"yarn run\"; # lists all the scripts we have available\r\nalias yab=\"yarn build\"; # build dist directory for each package\r\nalias yal=\"yarn lint:fix\"; # format source and auto-fix eslint issues\r\nalias yac=\"yarn commit\"; # open a Q&A prompt to help construct valid commit messages\r\nalias yas=\"yarn start\";\r\nalias yasb=\"yarn storybook:start\"; # start storybook\r\nalias yat=\"yarn test\"; # run the unit tests*\r\nalias yatw=\"yarn test:watch\"; #run the unit tests for files changed on save\r\n\r\n# ---others---\r\nalias topten=\"history | sort -rn | head\"\r\nalias myip=\"curl http://ipecho.net/plain; echo\"\r\nalias dirs='dirs -v | head -10'\r\nalias usage='du -h -d1'\r\nalias runp=\"lsof -i \"\r\n")])])])])}),[],!1,null,null,null);r.default=n.exports}}]);